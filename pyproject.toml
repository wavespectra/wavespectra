[build-system]
requires = ["numpy", "setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "wavespectra"
description = "Library for ocean wave spectra"
readme = "README.rst"
license = { file = "LICENSE.txt" }
keywords = ["wave", "spectra", "ocean", "xarray", "statistics", "analysis"]
authors = [
  { name = "Wavespectra Developers", email="r.guedes@oceanum.science" },
]
maintainers = [
  {name = "Rafael Guedes", email = "r.guedes@oceanum.science"},
  {name = "Tom Durrant", email = "t.durrant@oceanum.science"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"
dependencies = [
    "click",
    "dask",
    "matplotlib",
    "python-dateutil",
    "pyyaml",
    "sortedcontainers",
    "scipy",
    "xarray",
]
dynamic = ["version"]

[project.urls]
"Documentation" = "https://wavespectra.readthedocs.io/en/latest/"
"Source" = "https://github.com/wavespectra/wavespectra"
"Tracker" = "https://github.com/wavespectra/wavespectra/issues"
"Changelog" = "https://github.com/wavespectra/wavespectra/blob/master/HISTORY.rst"

[project.scripts]
wavespectra = "wavespectra.cli:main"

[project.entry-points."xarray.backends"]
era5 = "wavespectra.input.era5:ERA5BackendEntrypoint"
funwave = "wavespectra.input.funwave:FunwaveBackendEntrypoint"
json = "wavespectra.input.json:JsonBackendEntrypoint"
ncswan = "wavespectra.input.ncswan:NCSwanBackendEntrypoint"
ndbc = "wavespectra.input.ndbc:NDBCBackendEntrypoint"
ndbc_ascii = "wavespectra.input.ndbc_ascii:NDBCASCIIBackendEntrypoint"
netcdf = "wavespectra.input.netcdf:NetCDFBackendEntrypoint"
octopus = "wavespectra.input.octopus:OctopusBackendEntrypoint"
spotter = "wavespectra.input.spotter:SpotterBackendEntrypoint"
swan = "wavespectra.input.swan:SWANBackendEntrypoint"
triaxys = "wavespectra.input.triaxys:TRIAXYSBackendEntrypoint"
wavespectra = "wavespectra.input.wavespectra:WavespectraBackendEntrypoint"
wwm = "wavespectra.input.wwm:WWMBackendEntrypoint"
ww3 = "wavespectra.input.ww3:WW3BackendEntrypoint"
ww3_station = "wavespectra.input.ww3_station:WW3StationBackendEntrypoint"
xwaves = "wavespectra.input.xwaves:XWavesBackendEntrypoint"

[project.optional-dependencies]
test = ["pytest", "tox", "ruff"]
extra = [
    "fsspec",
    "gcsfs",
    "h5netcdf",
    "netCDF4",
    "zarr",
]
docs = [
    "autodoc",
    "cmocean",
    "ipython",
    "pickleshare",
    "pydata_sphinx_theme",
    "sphinxcontrib-programoutput",
    "sphinx-book-theme",
    "sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx-gallery",
]

[tool.setuptools.package-data]
"wavespectra.core" = ["*.yml"]
"wavespectra.output" = ["*.yml"]
"wavespectra.partition.specpart" = ["specpart.c", "specpart.h", "specpart_wrap.c"]

[tool.setuptools.dynamic]
version = {attr = "wavespectra.__version__"}

[tool.ruff]
line-length = 88

[tool.ruff.extend-per-file-ignores]
"wavespectra/__init__.py" = ["F401"]
"wavespectra/specdataset.py" = ["F401"]
"wavespectra/input/ww3.py" = ["F401"]
"wavespectra/input/triaxys.py" = ["F401"]
"wavespectra/input/wwm.py" = ["F401"]
"wavespectra/input/netcdf.py" = ["F401"]
"wavespectra/input/ncswan.py" = ["F401"]
"wavespectra/input/spotter.py" = ["F401"]
"wavespectra/input/dataset.py" = ["F401"]
"wavespectra/input/swan.py" = ["F401"]
"wavespectra/construct.py" = ["F401"]
"wavespectra/directional.py" = ["F401"]
"wavespectra/fit/pierson_moskowitz.py" = ["F401"]
"wavespectra/fit/tma.py" = ["F401"]
"wavespectra/input/funwave.py" = ["F401"]
"wavespectra/input/ndbc.py" = ["F401"]
"wavespectra/input/ndbc_ascii.py" = ["F401"]
"wavespectra/input/octopus.py" = ["F401"]
"wavespectra/input/wavespectra.py" = ["F401"]
"wavespectra/input/xwaves.py" = ["F401"]

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    env_list =
      py38
      py39
      py310

    [testenv]
    deps = wavespectra[extra, test]
    commands = pytest tests

    [testenv:flake8]
    basepython = python
    deps = flake8
    commands = flake8 wavespectra
"""